---
// FloatingMenu.astro: Neo-brutalist floating anchor menu for landing page
import StyledLink from './StyledLink.astro';

const sections = [
  { id: 'hero', label: 'Home' },
  { id: 'about', label: 'About' },
  { id: 'services', label: 'Services' },
  { id: 'web-design-dev', label: 'Pricing' }
];

// Detect if we're on the homepage
const isHome = Astro.url.pathname === '/';
---
<nav id="floating-menu" aria-label="Page sections" class="fixed z-[100] flex items-center bg-white border-3 border-black shadow-neo rounded-full px-4 py-2 gap-2 md:gap-4 font-serif text-base md:text-lg backdrop-blur-sm bg-opacity-95 floating-menu--at-top">
  <button id="floating-menu-toggle" class="menu-toggle md:hidden flex items-center" aria-label="Open menu" aria-expanded="false" aria-controls="floating-menu-list" type="button">
    <span class="sr-only">Open menu</span>
    <svg width="24" height="24" fill="none" viewBox="0 0 24 24" class="inline-block align-middle"><rect y="5" width="24" height="2" rx="1" fill="currentColor"/><rect y="11" width="24" height="2" rx="1" fill="currentColor"/><rect y="17" width="24" height="2" rx="1" fill="currentColor"/></svg>
  </button>
  <ul id="floating-menu-list" class="flex items-center gap-2 md:gap-3">
    {sections.map(({ id, label }) => (
      <li>
        <a 
          href={isHome ? `#${id}` : `/#${id}`}
          class="neo-link-base neo-link-secondary px-3 py-1 text-sm md:text-base rounded transition-colors duration-200 hover:bg-primary hover:text-white focus:bg-primary focus:text-white"
          tabindex="0"
        >
          {label}
        </a>
      </li>
    ))}
    <li>
      <StyledLink href="/contact" variant="primary" size="sm" className="ml-0 md:ml-4 w-full md:w-auto text-center">Contact</StyledLink>
    </li>
  </ul>
</nav>

<style is:global>
.floating-menu--at-top {
  top: 5.5rem; /* ~88px, below banner */
  left: 50%;
  right: auto;
  transform: translateX(-50%);
  transition: top 0.3s cubic-bezier(.4,2,.6,1);
}
.floating-menu--scrolled {
  top: 1.5rem; /* ~24px, original position */
  left: 50%;
  right: auto;
  transform: translateX(-50%);
  transition: top 0.3s cubic-bezier(.4,2,.6,1);
}
@media (max-width: 640px) {
  #floating-menu {
    left: auto;
    right: 1.25rem;
    top: 5.5rem; /* Remove !important so class can override */
    bottom: auto;
    transform: none !important;
    border-radius: 1.5rem;
    flex-direction: column;
    padding: 0.1rem 1.25rem; /* less vertical, more horizontal */
    gap: 0.25rem;
    width: auto;
    min-width: 0;
    align-items: flex-end;
    transition: top 0.3s cubic-bezier(.4,2,.6,1), width 0.3s cubic-bezier(.4,2,.6,1);
  }
  #floating-menu.floating-menu--at-top {
    top: 5.5rem;
  }
  #floating-menu.floating-menu--scrolled {
    top: 1.5rem;
  }
  #floating-menu:not(.open) {
    width: 2.5rem !important;
    min-width: 2.5rem !important;
    max-width: 2.5rem !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
    justify-content: flex-end;
  }
  #floating-menu.open {
    width: auto !important;
    min-width: 90px;
    max-width: 100vw;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    justify-content: flex-end;
  }
  .menu-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background: #fff;
    border: 2px solid #222;
    border-radius: 50%;
    font-size: 1.1rem;
    font-family: inherit;
    font-weight: 600;
    padding: 0;
    margin-bottom: 0.1rem;
    cursor: pointer;
    box-shadow: 2px 2px 0 #000;
    z-index: 101;
    transition: background 0.2s, color 0.2s;
  }
  .menu-toggle[aria-expanded="true"] {
    background: var(--primary, #222);
    color: #fff;
  }
  nav[aria-label="Page sections"] ul {
    flex-direction: column;
    gap: 1rem;
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
    transition: max-height 0.3s cubic-bezier(.4,2,.6,1), opacity 0.2s;
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    pointer-events: none;
    width: 100%;
    background: none;
    box-shadow: none;
  }
  nav[aria-label="Page sections"] ul.open {
    max-height: 500px;
    opacity: 1;
    pointer-events: auto;
  }
}
</style>
<script>
// Smooth scroll for anchor links
if (typeof window !== 'undefined') {
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        const self = e.currentTarget;
        const targetId = self.getAttribute('href')?.slice(1);
        if (!targetId) return;
        const target = document.getElementById(targetId);
        if (target) {
          e.preventDefault();
          target.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      });
    });

    // Floating menu scroll behavior
    const menu = document.getElementById('floating-menu');
    const toggle = document.getElementById('floating-menu-toggle');
    const menuList = document.getElementById('floating-menu-list');
    const threshold = 64; // px, adjust as needed
    function updateMenuPosition() {
      if (!menu) return;
      if (window.scrollY > threshold) {
        menu.classList.remove('floating-menu--at-top');
        menu.classList.add('floating-menu--scrolled');
      } else {
        menu.classList.add('floating-menu--at-top');
        menu.classList.remove('floating-menu--scrolled');
      }
    }
    updateMenuPosition();
    window.addEventListener('scroll', updateMenuPosition);

    // Collapsible menu for mobile
    if (toggle && menuList && menu) {
      toggle.addEventListener('click', () => {
        menuList.classList.toggle('open');
        toggle.setAttribute('aria-expanded', menuList.classList.contains('open') ? 'true' : 'false');
        menu.classList.toggle('open', menuList.classList.contains('open'));
      });
      // Close menu when a link is clicked (mobile UX)
      Array.from(menuList.querySelectorAll('a')).forEach(function(link) {
        link.addEventListener('click', function() {
          if (window.innerWidth <= 640) {
            menuList.classList.remove('open');
            toggle.setAttribute('aria-expanded', 'false');
            menu.classList.remove('open');
          }
        });
      });
    }
  });
}
</script>
