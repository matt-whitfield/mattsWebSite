---
interface Props {
  hourlyRate?: string;
  description?: string;
  features?: string[];
  priceRanges?: Array<{
    service: string;
    range: string;
  }>;
  note?: string;
  color?: 'primary' | 'coral' | 'blue' | 'mint' | 'purple' | 'lime';
}

const {
  hourlyRate,
  description,
  features = [],
  priceRanges = [],
  note,
  color = 'coral'
} = Astro.props;
---

<div class="grid md:grid-cols-2 gap-8">
  <div class="space-y-6">
    <div>
      <h3 class="font-bold text-xl mb-3 text-text">How I Price Projects</h3>
      {description && (
        <p class="neo-text text-lg mb-4" set:html={description}></p>
      )}
      
      {features.length > 0 && (
        <ul class="space-y-2 text-base">
          {features.map((feature) => (
            <li class="flex items-start">
              <span class={`h-2 w-2 bg-${color} rounded-full flex-shrink-0 mt-2 mr-3`}></span>
              <span>{feature}</span>
            </li>
          ))}
        </ul>
      )}
    </div>
  </div>
  
  {priceRanges.length > 0 && (
    <div class="space-y-6">
      <div class="p-6 bg-white border-2 border-black">
        <h3 class={`font-bold text-lg mb-3 text-${color}`}>Typical Project Ranges</h3>
        <div class="space-y-3 text-sm">
          {priceRanges.map((range) => (
            <div class="flex justify-between">
              <span>{range.service}</span>
              <span class="font-medium">{range.range}</span>
            </div>
          ))}
        </div>
        {note && (
          <p class="text-xs text-gray-600 mt-4">{note}</p>
        )}
      </div>
    </div>
  )}
</div>