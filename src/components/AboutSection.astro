---
import StyledLink from './StyledLink.astro';
import ProfileBadge from './ProfileBadge.astro';

interface Props {
  title: string;
  description: string;
  listItems?: string[];
  ctaText?: string;
  ctaLink?: string;
  imagePath?: string;
  alt?: string;
  color?: 'blue' | 'mint' | 'coral' | 'purple' | 'lime' | 'highlight';
}

const {
  title = "You won't find a big agency here.",
  description = "Just meâ€”working closely with you to build a site that reflects your story, solves real problems, and feels like a true extension of your business.",
  listItems = [],
  ctaText = "Want to see if we're a good fit?",
  ctaLink = "/contact",
  imagePath = "/images/matt-whitfield-bloomsday-2021-400x400.webp",
  alt = "Matt Whitfield smiling at Bloomsday 2021.",
  color = 'blue'
} = Astro.props;

// Helper function to get a valid StyledLink variant
function getButtonVariant(
  color: 'blue' | 'mint' | 'coral' | 'purple' | 'lime' | 'highlight' | undefined
):
  | 'secondary-blue'
  | 'secondary-mint'
  | 'secondary-coral'
  | 'secondary-purple'
  | 'secondary-lime'
  | 'secondary-highlight'
  | 'secondary' {
  switch (color) {
    case 'blue': return 'secondary-blue';
    case 'mint': return 'secondary-mint';
    case 'coral': return 'secondary-coral';
    case 'purple': return 'secondary-purple';
    case 'lime': return 'secondary-lime';
    case 'highlight': return 'secondary-highlight';
    default: return 'secondary';
  }
}
---

<div class="about-section relative neo-card-base py-12 px-6 md:px-10">
  <div class={`absolute -top-6 -left-6 p-2 bg-${color} border-3 border-black text-black font-serif font-bold text-xl uppercase`}>About me</div>
  
  <div class="flex flex-col md:flex-row gap-10 md:gap-16 items-start">
    <div class="md:w-2/3">
      <h2 class="neo-heading text-4xl md:text-5xl mb-6 text-text">{title}</h2>
      
      <p class="neo-text text-lg mb-6">{description}</p>
      
      <p class="neo-text text-lg font-medium mb-4">I combine:</p>
      
      <ul class="mb-8 text-lg text-text">
        {listItems.map((item, index) => {
          // Use geometric shapes with rotations for visual interest
          const shapeRotation = index % 3 === 0 ? 'rotate-45' : 
                              index % 3 === 1 ? 'rotate-0' : 
                              'rotate-[135deg]';
          return (
            <li class="neo-text flex items-start mb-4">
              <!-- Geometric shape instead of icon -->
              <span class={`h-4 w-4 transform ${shapeRotation} bg-${color} border-2 border-black flex-shrink-0 mt-1.5 mr-4`} aria-hidden="true"></span>
              <span class="flex-grow">{item}</span>
            </li>
          );
        })}
      </ul>
      
      <div class="mt-8">
        <StyledLink href={ctaLink} variant={getButtonVariant(color)}>{ctaText}</StyledLink>
      </div>
    </div>
    
    <div class="md:w-1/3 flex justify-center">
      <div class="relative w-full max-w-xs">
        <div class="aspect-ratio-1/1 overflow-hidden neo-image-frame border-3 border-black bg-white">
          <img src={imagePath} alt={alt} class="w-full h-full object-cover" />
        </div>
        <div class={`absolute -bottom-4 -right-4 p-2 bg-${color} border-3 border-black text-black font-medium rotate-6`}>
          That's me!
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .neo-image-frame {
    box-shadow: 8px 8px 0 0 rgba(0, 0, 0, 1);
  }
  
  .aspect-ratio-1/1 {
    aspect-ratio: 1/1;
  }
</style>