---
import ServiceCard from './ServiceCard.astro';
import StyledLink from './StyledLink.astro';

interface Feature {
  text: string;
}

interface Service {
  icon: string;
  title: string;
  description: string;
  color?: 'primary' | 'mint' | 'coral' | 'blue' | 'purple' | 'lime' | 'highlight';
}

interface Props {
  title: string;
  subtitle: string;
  description?: string;
  services: Service[];
  features?: Feature[];
  ctaText?: string;
  ctaLink?: string;
  color?: 'coral' | 'mint' | 'purple' | 'blue' | 'lime' | 'highlight' | 'primary'; // Add section color property
}

const {
  title,
  subtitle,
  description,
  services = [],
  features = [],
  ctaText = "View All Services",
  ctaLink = "/services",
  color = 'coral' // Default theme color for this section
} = Astro.props;

// Map the color to the valid secondary button variant
// Make sure this matches the allowed values in StyledLink.astro
const getButtonVariant = (color: string): 'secondary' | 'secondary-primary' | 'secondary-mint' | 
                                          'secondary-coral' | 'secondary-purple' | 'secondary-blue' | 
                                          'secondary-lime' | 'secondary-highlight' => {
  if (color === 'primary') return 'secondary-primary';
  if (color === 'mint') return 'secondary-mint';
  if (color === 'coral') return 'secondary-coral';
  if (color === 'purple') return 'secondary-purple';
  if (color === 'blue') return 'secondary-blue';
  if (color === 'lime') return 'secondary-lime';
  if (color === 'highlight') return 'secondary-highlight';
  return 'secondary-coral'; // Default fallback
};

const buttonVariant = getButtonVariant(color);
---

<section class="w-full py-0">
  <!-- Use page-container for consistent width with other sections -->
  <div class="page-container relative z-1">
  
    
    <div class="relative mb-16">
      <h2 class="neo-heading text-4xl md:text-5xl mb-8 text-text inline-block bg-white px-5 py-3 shadow-neo border-3 border-black">{title}</h2>
    </div>
    
    {description && <p class="neo-text text-lg mb-8 max-w-3xl">{description}</p>}
    
    <h3 class="neo-subheading text-2xl mb-6">{subtitle}</h3>
    
    <!-- Service Card Grid - all using the section color for consistency -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mb-10">
      {services.map((service) => (
        <ServiceCard 
          icon={service.icon} 
          title={service.title} 
          description={service.description}
          color={color}
        />
      ))}
    </div>
    
    {features && features.length > 0 && (
      <div class="features-box features-gradient mt-12 md:mt-0 md:ml-10 relative">
        <div class={`absolute -top-6 -left-6 p-2 bg-${color} border-3 border-black text-black font-serif font-bold text-lg uppercase`}>Each site includes</div>
        <ul class="space-y-4">
          {features.map((feature) => (
            <li class="neo-text flex items-start">
              <span class={`h-4 w-4 transform rotate-45 bg-${color} border-2 border-black flex-shrink-0 mt-1.5 mr-4`} aria-hidden="true"></span>
              <span class="flex-grow">{feature.text}</span>
            </li>
          ))}
        </ul>
      </div>
    )}
    
    <div class="flex justify-center mt-12">
      <StyledLink href={ctaLink} variant={buttonVariant} size="md">{ctaText}</StyledLink>
    </div>
  </div>
</section>

<style>
  /* Styles removed as they are now handled by UnoCSS or moved to uno.config.ts */
</style>